package cdac.b1.utils;

import static cdac.b1.utils.ContactValidations.inputValidation;
import static java.time.LocalDate.parse;

import java.time.LocalDate;
import java.util.HashMap;
import java.util.Map;
import java.util.Scanner;

import cdac.b1.core.Contact;
import cdac.b1.exceptions.ContactBookException;

public class Utility {
	
	public static Map<String, Contact> populateContactMap(){
		Map<String, Contact> contacts = new HashMap<>();
		contacts.put("Mohit", new Contact("8965741263", "Mohit", 
				parse("1987-12-30"), "mohitdk2@gmail.com"));
		contacts.put("Linay", new Contact("8965753263", "Linay", 
				parse("1998-11-10"), "linay@gmail.com"));
		contacts.put("Pratik", new Contact("8799341263", "Pratik", 
				parse("1925-05-12"), "pratik@gmail.com"));
		return contacts;	
	}
	
	public static void addContactDetails(Map<String, Contact> contactMap, Scanner sc) 
			throws ContactBookException {
		System.out.println("Enter Details: [Phone Number, Name, DOB(yyyy-MM-dd), Email(Optional)]");
		Contact contact = inputValidation(sc.next(), sc.next(), 
				sc.next(), sc.next(), contactMap);
		contactMap.put(contact.getName(), contact);
		System.out.println("Contact Added Successfully...");		
	}
	
	public static void displayAllContacts(Map<String, Contact> contactMap, Scanner sc) 
			throws ContactBookException {
		for(Contact contact : contactMap.values())
			System.out.println(contact);
	}
	
	public static void updateContactDetails(Map<String, Contact> contactMap, Scanner sc) 
			throws ContactBookException {
		System.out.println("Enter Name: ");
		String name = sc.next();
		System.out.println("Enter DOB: ");
		LocalDate date = parse(sc.next());	
		Contact contact = contactMap.get(name);
		if((contact.getName().equals(name)) && (contact.getDob().equals(contact))){
			
		}
	}
	
	public static void removeAllContactsAbove80yrs(Map<String, Contact> contactMap, Scanner sc) 
			throws ContactBookException {
		LocalDate date  = LocalDate.now().minusYears(80);
	}
	
}
