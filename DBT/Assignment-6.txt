Database Technology
Assignment:6



mysql> create database emp;
Query OK, 1 row affected (0.01 sec)

mysql> show databases;
+--------------------+
| Database           |
+--------------------+
| Employee           |
| Employee1          |
| college            |
| college1           |
| dummy              |
| emp                |
| information_schema |
| mysql              |
| performance_schema |
| sys                |
+--------------------+
10 rows in set (0.00 sec)

mysql> use emp;
Database changed
mysql> create table worker
    -> (worker_id tinyint primary key, first_name varchar(20), last_name varchar(20), salary int, joining_date datetime, department varchar(10));
Query OK, 0 rows affected (0.03 sec)

mysql> desc worker;
+--------------+-------------+------+-----+---------+-------+
| Field        | Type        | Null | Key | Default | Extra |
+--------------+-------------+------+-----+---------+-------+
| worker_id    | tinyint     | NO   | PRI | NULL    |       |
| first_name   | varchar(20) | YES  |     | NULL    |       |
| last_name    | varchar(20) | YES  |     | NULL    |       |
| salary       | int         | YES  |     | NULL    |       |
| joining_date | datetime    | YES  |     | NULL    |       |
| department   | varchar(10) | YES  |     | NULL    |       |
+--------------+-------------+------+-----+---------+-------+
6 rows in set (0.01 sec)

mysql> insert into worker values(1, 'Monika', 'Arora', 100000, '2014-02-20 09:00:00', 'HR');
Query OK, 1 row affected (0.01 sec)

mysql> insert into worker values(2, 'Niharika', 'Verma', 80000, '2014-06-11 09:00:00', 'Admin');
Query OK, 1 row affected (0.01 sec)

mysql> insert into worker values(3, 'Vishal', 'Singhal', 300000, '2014-02-20 09:00:00', 'HR');
Query OK, 1 row affected (0.00 sec)

mysql> insert into worker values(4, 'Amitabh', 'Singh', 500000, '2014-02-20 09:00:00', 'Admin');
Query OK, 1 row affected (0.00 sec)

mysql> insert into worker values(5, 'Vivek', 'Bhati', 500000, '2014-06-11 09:00:00', 'Admin');
Query OK, 1 row affected (0.00 sec)

mysql> insert into worker values(6, 'Vipul', 'Diwan', 200000, '2014-06-11 09:00:00', 'Account');
Query OK, 1 row affected (0.01 sec)

mysql> insert into worker values(7, 'Satish', 'Kumar', 75000, '2014-01-20 09:00:00', 'Account');
Query OK, 1 row affected (0.00 sec)

mysql> insert into worker values(8, 'Geetika', 'Chauhan', 90000, '2014-04-11 09:00:00', 'Admin');
Query OK, 1 row affected (0.01 sec)

mysql> select * from worker;
+-----------+------------+-----------+--------+---------------------+------------+
| worker_id | first_name | last_name | salary | joining_date        | department |
+-----------+------------+-----------+--------+---------------------+------------+
|         1 | Monika     | Arora     | 100000 | 2014-02-20 09:00:00 | HR         |
|         2 | Niharika   | Verma     |  80000 | 2014-06-11 09:00:00 | Admin      |
|         3 | Vishal     | Singhal   | 300000 | 2014-02-20 09:00:00 | HR         |
|         4 | Amitabh    | Singh     | 500000 | 2014-02-20 09:00:00 | Admin      |
|         5 | Vivek      | Bhati     | 500000 | 2014-06-11 09:00:00 | Admin      |
|         6 | Vipul      | Diwan     | 200000 | 2014-06-11 09:00:00 | Account    |
|         7 | Satish     | Kumar     |  75000 | 2014-01-20 09:00:00 | Account    |
|         8 | Geetika    | Chauhan   |  90000 | 2014-04-11 09:00:00 | Admin      |
+-----------+------------+-----------+--------+---------------------+------------+
8 rows in set (0.00 sec)

mysql> create table bonus 
    -> (worker_ref_id tinyint, bonus_date datetime, bonus_amount int);
Query OK, 0 rows affected (0.03 sec)

mysql> desc bonus;
+---------------+----------+------+-----+---------+-------+
| Field         | Type     | Null | Key | Default | Extra |
+---------------+----------+------+-----+---------+-------+
| worker_ref_id | tinyint  | YES  |     | NULL    |       |
| bonus_date    | datetime | YES  |     | NULL    |       |
| bonus_amount  | int      | YES  |     | NULL    |       |
+---------------+----------+------+-----+---------+-------+
3 rows in set (0.00 sec)

mysql> insert into bonus values(
    -> ^C
mysql> insert into bonus values(1, '2016-02-20 00:00:00', 5000);
Query OK, 1 row affected (0.01 sec)

mysql> insert into bonus values(2, '2016-06-11 00:00:00', 3000);
Query OK, 1 row affected (0.01 sec)

mysql> insert into bonus values(3, '2016-02-20 00:00:00', 4000);
Query OK, 1 row affected (0.01 sec)

mysql> insert into bonus values(1, '2016-02-20 00:00:00', 4500);
Query OK, 1 row affected (0.01 sec)

mysql> insert into bonus values(2, '2016-06-11 00:00:00', 3500);
Query OK, 1 row affected (0.01 sec)

mysql> select * from bonus;
+---------------+---------------------+--------------+
| worker_ref_id | bonus_date          | bonus_amount |
+---------------+---------------------+--------------+
|             1 | 2016-02-20 00:00:00 |         5000 |
|             2 | 2016-06-11 00:00:00 |         3000 |
|             3 | 2016-02-20 00:00:00 |         4000 |
|             1 | 2016-02-20 00:00:00 |         4500 |
|             2 | 2016-06-11 00:00:00 |         3500 |
+---------------+---------------------+--------------+
5 rows in set (0.00 sec)

mysql> create table title (worker_ref_id tinyint, worker_title varchar(12), affected_from datetime);
Query OK, 0 rows affected (0.02 sec)

mysql> desc title;
+---------------+-------------+------+-----+---------+-------+
| Field         | Type        | Null | Key | Default | Extra |
+---------------+-------------+------+-----+---------+-------+
| worker_ref_id | tinyint     | YES  |     | NULL    |       |
| worker_title  | varchar(12) | YES  |     | NULL    |       |
| affected_from | datetime    | YES  |     | NULL    |       |
+---------------+-------------+------+-----+---------+-------+
3 rows in set (0.00 sec)

mysql> insert into title values(1, 'Manager', '2016-02-20 00:00:00');
Query OK, 1 row affected (0.01 sec)

mysql> insert into title values(2, 'Executive', '2016-06-11 00:00:00');
Query OK, 1 row affected (0.00 sec)

mysql> insert into title values(8, 'Executive', '2016-06-11 00:00:00');
Query OK, 1 row affected (0.00 sec)

mysql> insert into title values(5, 'Manager', '2016-06-11 00:00:00');
Query OK, 1 row affected (0.00 sec)

mysql> alter table title modify worker_title varchar(15);
Query OK, 0 rows affected (0.03 sec)
Records: 0  Duplicates: 0  Warnings: 0

mysql> insert into title values(4, 'Asst. Manager', '2016-06-11 00:00:00');
Query OK, 1 row affected (0.00 sec)

mysql> insert into title values(7, 'Executive', '2016-06-11 00:00:00');
Query OK, 1 row affected (0.00 sec)

mysql> insert into title values(6, 'Lead', '2016-06-11 00:00:00');
Query OK, 1 row affected (0.00 sec)

mysql> insert into title values(3, 'Lead', '2016-06-11 00:00:00');
Query OK, 1 row affected (0.00 sec)

mysql> select * from title;
+---------------+---------------+---------------------+
| worker_ref_id | worker_title  | affected_from       |
+---------------+---------------+---------------------+
|             1 | Manager       | 2016-02-20 00:00:00 |
|             2 | Executive     | 2016-06-11 00:00:00 |
|             8 | Executive     | 2016-06-11 00:00:00 |
|             5 | Manager       | 2016-06-11 00:00:00 |
|             4 | Asst. Manager | 2016-06-11 00:00:00 |
|             7 | Executive     | 2016-06-11 00:00:00 |
|             6 | Lead          | 2016-06-11 00:00:00 |
|             3 | Lead          | 2016-06-11 00:00:00 |
+---------------+---------------+---------------------+
8 rows in set (0.00 sec)

----------------------------------------------------------------------------------------------------------------------
----------------------------------------------------------------------------------------------------------------------
## 1: Write an SQL query to fetch “FIRST_NAME” from the Worker table using the
alias name <WORKER_NAME>.

mysql> select first_name as WORKER_NAME from worker;
+-------------+
| WORKER_NAME |
+-------------+
| Monika      |
| Niharika    |
| Vishal      |
| Amitabh     |
| Vivek       |
| Vipul       |
| Satish      |
| Geetika     |
+-------------+
8 rows in set (0.00 sec)
------------------------------------------------------------------------------------------

## 2: Write an SQL query to fetch “FIRST_NAME” from the Worker table in upper
case.

mysql> select upper(first_name) from worker;
+-------------------+
| upper(first_name) |
+-------------------+
| MONIKA            |
| NIHARIKA          |
| VISHAL            |
| AMITABH           |
| VIVEK             |
| VIPUL             |
| SATISH            |
| GEETIKA           |
+-------------------+
8 rows in set (0.00 sec)
------------------------------------------------------------------------------------------

## 3: Write an SQL query to fetch unique values of DEPARTMENT from the Worker
table.

mysql> select distinct department from worker;
+------------+
| department |
+------------+
| HR         |
| Admin      |
| Account    |
+------------+
3 rows in set (0.00 sec)
------------------------------------------------------------------------------------------

## 4: Write an SQL query to print the first three characters of FIRST_NAME from the
Worker table.

mysql> select substring(first_name, 1,3) from worker;
+----------------------------+
| substring(first_name, 1,3) |
+----------------------------+
| Mon                        |
| Nih                        |
| Vis                        |
| Ami                        |
| Viv                        |
| Vip                        |
| Sat                        |
| Gee                        |
+----------------------------+
8 rows in set (0.00 sec)
------------------------------------------------------------------------------------------

## 5: Write an SQL query to find the position of the alphabet (‘a’) in the first name column ‘Amitabh’ from the Worker table.

mysql> select position('a' in first_name) from worker where first_name = 'Amitabh';
+-----------------------------+
| position('a' in first_name) |
+-----------------------------+
|                           1 |
+-----------------------------+
1 row in set (0.00 sec)

mysql> select instr(first_name, binary'a') from worker where first_name = 'Amitabh';
+------------------------------+
| instr(first_name, binary'a') |
+------------------------------+
|                            1 |
+------------------------------+
1 row in set, 1 warning (0.00 sec)
------------------------------------------------------------------------------------------

## 6: Write an SQL query to print all Worker details from the Worker table order by
FIRST_NAME Ascending.
	
mysql> select * from worker order by first_name asc;
+-----------+------------+-----------+--------+---------------------+------------+
| worker_id | first_name | last_name | salary | joining_date        | department |
+-----------+------------+-----------+--------+---------------------+------------+
|         4 | Amitabh    | Singh     | 500000 | 2014-02-20 09:00:00 | Admin      |
|         8 | Geetika    | Chauhan   |  90000 | 2014-04-11 09:00:00 | Admin      |
|         1 | Monika     | Arora     | 100000 | 2014-02-20 09:00:00 | HR         |
|         2 | Niharika   | Verma     |  80000 | 2014-06-11 09:00:00 | Admin      |
|         7 | Satish     | Kumar     |  75000 | 2014-01-20 09:00:00 | Account    |
|         6 | Vipul      | Diwan     | 200000 | 2014-06-11 09:00:00 | Account    |
|         3 | Vishal     | Singhal   | 300000 | 2014-02-20 09:00:00 | HR         |
|         5 | Vivek      | Bhati     | 500000 | 2014-06-11 09:00:00 | Admin      |
+-----------+------------+-----------+--------+---------------------+------------+
8 rows in set (0.00 sec)
------------------------------------------------------------------------------------------

## 7: Write an SQL query to print all Worker details from the Worker table order by
FIRST_NAME Ascending and DEPARTMENT Descending.

mysql> select * from worker order by first_name asc, department desc;
+-----------+------------+-----------+--------+---------------------+------------+
| worker_id | first_name | last_name | salary | joining_date        | department |
+-----------+------------+-----------+--------+---------------------+------------+
|         4 | Amitabh    | Singh     | 500000 | 2014-02-20 09:00:00 | Admin      |
|         8 | Geetika    | Chauhan   |  90000 | 2014-04-11 09:00:00 | Admin      |
|         1 | Monika     | Arora     | 100000 | 2014-02-20 09:00:00 | HR         |
|         2 | Niharika   | Verma     |  80000 | 2014-06-11 09:00:00 | Admin      |
|         7 | Satish     | Kumar     |  75000 | 2014-01-20 09:00:00 | Account    |
|         6 | Vipul      | Diwan     | 200000 | 2014-06-11 09:00:00 | Account    |
|         3 | Vishal     | Singhal   | 300000 | 2014-02-20 09:00:00 | HR         |
|         5 | Vivek      | Bhati     | 500000 | 2014-06-11 09:00:00 | Admin      |
+-----------+------------+-----------+--------+---------------------+------------+
8 rows in set (0.00 sec)
------------------------------------------------------------------------------------------

## 8: Write an SQL query to print details for Workers with the first names “Vipul” and “Satish” from the Worker table.

mysql> select * from worker where first_name in ('vipul', 'satish');
+-----------+------------+-----------+--------+---------------------+------------+
| worker_id | first_name | last_name | salary | joining_date        | department |
+-----------+------------+-----------+--------+---------------------+------------+
|         6 | Vipul      | Diwan     | 200000 | 2014-06-11 09:00:00 | Account    |
|         7 | Satish     | Kumar     |  75000 | 2014-01-20 09:00:00 | Account    |
+-----------+------------+-----------+--------+---------------------+------------+
2 rows in set (0.00 sec)
------------------------------------------------------------------------------------------

## 9: Write an SQL query to print details of workers excluding first names, “Vipul” and “Satish” from the Worker table.

mysql> select * from worker where first_name not in ('vipul', 'satish');
+-----------+------------+-----------+--------+---------------------+------------+
| worker_id | first_name | last_name | salary | joining_date        | department |
+-----------+------------+-----------+--------+---------------------+------------+
|         1 | Monika     | Arora     | 100000 | 2014-02-20 09:00:00 | HR         |
|         2 | Niharika   | Verma     |  80000 | 2014-06-11 09:00:00 | Admin      |
|         3 | Vishal     | Singhal   | 300000 | 2014-02-20 09:00:00 | HR         |
|         4 | Amitabh    | Singh     | 500000 | 2014-02-20 09:00:00 | Admin      |
|         5 | Vivek      | Bhati     | 500000 | 2014-06-11 09:00:00 | Admin      |
|         8 | Geetika    | Chauhan   |  90000 | 2014-04-11 09:00:00 | Admin      |
+-----------+------------+-----------+--------+---------------------+------------+
6 rows in set (0.00 sec)
------------------------------------------------------------------------------------------

## 10:  Write an SQL query to print details of Workers with DEPARTMENT name as
“Admin”.

mysql> select * from worker where department='Admin';
+-----------+------------+-----------+--------+---------------------+------------+
| worker_id | first_name | last_name | salary | joining_date        | department |
+-----------+------------+-----------+--------+---------------------+------------+
|         2 | Niharika   | Verma     |  80000 | 2014-06-11 09:00:00 | Admin      |
|         4 | Amitabh    | Singh     | 500000 | 2014-02-20 09:00:00 | Admin      |
|         5 | Vivek      | Bhati     | 500000 | 2014-06-11 09:00:00 | Admin      |
|         8 | Geetika    | Chauhan   |  90000 | 2014-04-11 09:00:00 | Admin      |
+-----------+------------+-----------+--------+---------------------+------------+
4 rows in set (0.00 sec)
------------------------------------------------------------------------------------------

## 11: Write an SQL query to print details of the Workers whose FIRST_NAME contains
‘a’.

mysql> select * from worker where first_name like '%a%';
+-----------+------------+-----------+--------+---------------------+------------+
| worker_id | first_name | last_name | salary | joining_date        | department |
+-----------+------------+-----------+--------+---------------------+------------+
|         4 | Amitabh    | Singh     | 500000 | 2014-02-20 09:00:00 | Admin      |
+-----------+------------+-----------+--------+---------------------+------------+
1 row in set (0.00 sec)
------------------------------------------------------------------------------------------

## 12: Write an SQL query to print names of the Workers whose FIRST_NAME ends
with ‘a’.

mysql> select * from worker where first_name like '%a';
+-----------+------------+-----------+--------+---------------------+------------+
| worker_id | first_name | last_name | salary | joining_date        | department |
+-----------+------------+-----------+--------+---------------------+------------+
|         1 | Monika     | Arora     | 100000 | 2014-02-20 09:00:00 | HR         |
|         2 | Niharika   | Verma     |  80000 | 2014-06-11 09:00:00 | Admin      |
|         8 | Geetika    | Chauhan   |  90000 | 2014-04-11 09:00:00 | Admin      |
+-----------+------------+-----------+--------+---------------------+------------+
3 rows in set (0.00 sec)
------------------------------------------------------------------------------------------

## 13: Write an SQL query to print details of the Workers whose FIRST_NAME ends
with ‘h’ and contains six alphabets.

mysql> select * from worker where first_name like '_____h';
+-----------+------------+-----------+--------+---------------------+------------+
| worker_id | first_name | last_name | salary | joining_date        | department |
+-----------+------------+-----------+--------+---------------------+------------+
|         7 | Satish     | Kumar     |  75000 | 2014-01-20 09:00:00 | Account    |
+-----------+------------+-----------+--------+---------------------+------------+
1 row in set (0.00 sec)
------------------------------------------------------------------------------------------

## 14: Write an SQL query to print details of the Workers whose SALARY lies between
100000 and 500000.

mysql> select * from worker where salary between 100000 and 500000;
+-----------+------------+-----------+--------+---------------------+------------+
| worker_id | first_name | last_name | salary | joining_date        | department |
+-----------+------------+-----------+--------+---------------------+------------+
|         1 | Monika     | Arora     | 100000 | 2014-02-20 09:00:00 | HR         |
|         3 | Vishal     | Singhal   | 300000 | 2014-02-20 09:00:00 | HR         |
|         4 | Amitabh    | Singh     | 500000 | 2014-02-20 09:00:00 | Admin      |
|         5 | Vivek      | Bhati     | 500000 | 2014-06-11 09:00:00 | Admin      |
|         6 | Vipul      | Diwan     | 200000 | 2014-06-11 09:00:00 | Account    |
+-----------+------------+-----------+--------+---------------------+------------+
5 rows in set (0.00 sec)
------------------------------------------------------------------------------------------

## 15: Write an SQL query to print details of the Workers who joined in Feb’2014.

mysql> select * from worker where joining_date like '2014-02%';
+-----------+------------+-----------+--------+---------------------+------------+
| worker_id | first_name | last_name | salary | joining_date        | department |
+-----------+------------+-----------+--------+---------------------+------------+
|         1 | Monika     | Arora     | 100000 | 2014-02-20 09:00:00 | HR         |
|         3 | Vishal     | Singhal   | 300000 | 2014-02-20 09:00:00 | HR         |
|         4 | Amitabh    | Singh     | 500000 | 2014-02-20 09:00:00 | Admin      |
+-----------+------------+-----------+--------+---------------------+------------+
3 rows in set (0.00 sec)
------------------------------------------------------------------------------------------

## 16: Write an SQL query to fetch the count of employees working in the department
‘Admin’.

mysql> select count(department) from worker where department='Admin';
+-------------------+
| count(department) |
+-------------------+
|                 4 |
+-------------------+
1 row in set (0.00 sec)
------------------------------------------------------------------------------------------

## 17: Write an SQL query to fetch worker names with salaries >= 50000 and <=
100000.

mysql> select * from worker where salary between 50000 and 100000;
+-----------+------------+-----------+--------+---------------------+------------+
| worker_id | first_name | last_name | salary | joining_date        | department |
+-----------+------------+-----------+--------+---------------------+------------+
|         1 | Monika     | Arora     | 100000 | 2014-02-20 09:00:00 | HR         |
|         2 | Niharika   | Verma     |  80000 | 2014-06-11 09:00:00 | Admin      |
|         7 | Satish     | Kumar     |  75000 | 2014-01-20 09:00:00 | Account    |
|         8 | Geetika    | Chauhan   |  90000 | 2014-04-11 09:00:00 | Admin      |
+-----------+------------+-----------+--------+---------------------+------------+
4 rows in set (0.00 sec)
------------------------------------------------------------------------------------------

## 18: Write an SQL query to fetch the no. of workers for each department in
descending order.

mysql> select department, count(worker_id) no_of_worker from worker group by department order by no_of_worker desc;
+------------+--------------+
| department | no_of_worker |
+------------+--------------+
| Admin      |            4 |
| HR         |            2 |
| Account    |            2 |
+------------+--------------+
3 rows in set (0.00 sec)
------------------------------------------------------------------------------------------

## 19: Write an SQL query to print details of the Workers who are also Managers.

mysql> select * from worker inner join title on worker.worker_id = title.worker_ref_id where worker_title = 'Manager';
+-----------+------------+-----------+--------+---------------------+------------+---------------+--------------+---------------------+
| worker_id | first_name | last_name | salary | joining_date        | department | worker_ref_id | worker_title | affected_from       |
+-----------+------------+-----------+--------+---------------------+------------+---------------+--------------+---------------------+
|         1 | Monika     | Arora     | 100000 | 2014-02-20 09:00:00 | HR         |             1 | Manager      | 2016-02-20 00:00:00 |
|         5 | Vivek      | Bhati     | 500000 | 2014-06-11 09:00:00 | Admin      |             5 | Manager      | 2016-06-11 00:00:00 |
+-----------+------------+-----------+--------+---------------------+------------+---------------+--------------+---------------------+
2 rows in set (0.00 sec)
------------------------------------------------------------------------------------------

## 20: Write an SQL query to fetch duplicate records having matching data in some
fields of a table.

mysql> select worker_title affected_from, count(*) from title group by worker_title, affected_from having count(*)>1;
+---------------+----------+
| affected_from | count(*) |
+---------------+----------+
| Executive     |        3 |
| Lead          |        2 |
+---------------+----------+
2 rows in set, 1 warning (0.00 sec)
------------------------------------------------------------------------------------------

## 21: Write an SQL query to show only odd rows from a table.

mysql> select * from worker where mod(worker_id,2)!=0;
+-----------+------------+-----------+--------+---------------------+------------+
| worker_id | first_name | last_name | salary | joining_date        | department |
+-----------+------------+-----------+--------+---------------------+------------+
|         1 | Monika     | Arora     | 100000 | 2014-02-20 09:00:00 | HR         |
|         3 | Vishal     | Singhal   | 300000 | 2014-02-20 09:00:00 | HR         |
|         5 | Vivek      | Bhati     | 500000 | 2014-06-11 09:00:00 | Admin      |
|         7 | Satish     | Kumar     |  75000 | 2014-01-20 09:00:00 | Account    |
+-----------+------------+-----------+--------+---------------------+------------+
4 rows in set (0.00 sec)
------------------------------------------------------------------------------------------

## 22: Write an SQL query to show only even rows from a table.

mysql> select * from worker where mod(worker_id,2)=0;
+-----------+------------+-----------+--------+---------------------+------------+
| worker_id | first_name | last_name | salary | joining_date        | department |
+-----------+------------+-----------+--------+---------------------+------------+
|         2 | Niharika   | Verma     |  80000 | 2014-06-11 09:00:00 | Admin      |
|         4 | Amitabh    | Singh     | 500000 | 2014-02-20 09:00:00 | Admin      |
|         6 | Vipul      | Diwan     | 200000 | 2014-06-11 09:00:00 | Account    |
|         8 | Geetika    | Chauhan   |  90000 | 2014-04-11 09:00:00 | Admin      |
+-----------+------------+-----------+--------+---------------------+------------+
4 rows in set (0.00 sec)
------------------------------------------------------------------------------------------

## 23: Write an SQL query to clone a new table from another table.

mysql> create table new_table (select * from worker);
Query OK, 8 rows affected (0.02 sec)
Records: 8  Duplicates: 0  Warnings: 0

mysql> select * from new_table;
+-----------+------------+-----------+--------+---------------------+------------+
| worker_id | first_name | last_name | salary | joining_date        | department |
+-----------+------------+-----------+--------+---------------------+------------+
|         1 | Monika     | Arora     | 100000 | 2014-02-20 09:00:00 | HR         |
|         2 | Niharika   | Verma     |  80000 | 2014-06-11 09:00:00 | Admin      |
|         3 | Vishal     | Singhal   | 300000 | 2014-02-20 09:00:00 | HR         |
|         4 | Amitabh    | Singh     | 500000 | 2014-02-20 09:00:00 | Admin      |
|         5 | Vivek      | Bhati     | 500000 | 2014-06-11 09:00:00 | Admin      |
|         6 | Vipul      | Diwan     | 200000 | 2014-06-11 09:00:00 | Account    |
|         7 | Satish     | Kumar     |  75000 | 2014-01-20 09:00:00 | Account    |
|         8 | Geetika    | Chauhan   |  90000 | 2014-04-11 09:00:00 | Admin      |
+-----------+------------+-----------+--------+---------------------+------------+
8 rows in set (0.00 sec)
------------------------------------------------------------------------------------------

## 24: Write an SQL query to fetch intersecting records of previous two tables.

mysql> select * from worker intersect select * from new_table;
+-----------+------------+-----------+--------+---------------------+------------+
| worker_id | first_name | last_name | salary | joining_date        | department |
+-----------+------------+-----------+--------+---------------------+------------+
|         1 | Monika     | Arora     | 100000 | 2014-02-20 09:00:00 | HR         |
|         3 | Vishal     | Singhal   | 300000 | 2014-02-20 09:00:00 | HR         |
|         5 | Vivek      | Bhati     | 500000 | 2014-06-11 09:00:00 | Admin      |
|         6 | Vipul      | Diwan     | 200000 | 2014-06-11 09:00:00 | Account    |
|         8 | Geetika    | Chauhan   |  90000 | 2014-04-11 09:00:00 | Admin      |
+-----------+------------+-----------+--------+---------------------+------------+
5 rows in set (0.00 sec)
------------------------------------------------------------------------------------------

## 25: Write an SQL query to show records from one table that another table does not have.

mysql> select * from worker
    -> where not exists
    -> (select * from new_table where worker.worker_id = new_table.worker_id);

##-> mysql> select * from worker except select * from new;

+-----------+------------+-----------+--------+---------------------+------------+
| worker_id | first_name | last_name | salary | joining_date        | department |
+-----------+------------+-----------+--------+---------------------+------------+
|         2 | Niharika   | Verma     |  80000 | 2014-06-11 09:00:00 | Admin      |
|         4 | Amitabh    | Singh     | 500000 | 2014-02-20 09:00:00 | Admin      |
|         7 | Satish     | Kumar     |  75000 | 2014-01-20 09:00:00 | Account    |
+-----------+------------+-----------+--------+---------------------+------------+
3 rows in set (0.01 sec)
------------------------------------------------------------------------------------------

## 26: Write an SQL query to show the top n (say 5) records of a table.

mysql> select * from worker limit 5;
+-----------+------------+-----------+--------+---------------------+------------+
| worker_id | first_name | last_name | salary | joining_date        | department |
+-----------+------------+-----------+--------+---------------------+------------+
|         1 | Monika     | Arora     | 100000 | 2014-02-20 09:00:00 | HR         |
|         2 | Niharika   | Verma     |  80000 | 2014-06-11 09:00:00 | Admin      |
|         3 | Vishal     | Singhal   | 300000 | 2014-02-20 09:00:00 | HR         |
|         4 | Amitabh    | Singh     | 500000 | 2014-02-20 09:00:00 | Admin      |
|         5 | Vivek      | Bhati     | 500000 | 2014-06-11 09:00:00 | Admin      |
+-----------+------------+-----------+--------+---------------------+------------+
5 rows in set (0.00 sec)
------------------------------------------------------------------------------------------

## 27: Write an SQL query to fetch the list of employees with the same salary.

mysql> select * from worker where salary in (select salary from worker w where worker.worker_id <> w.worker_id);
+-----------+------------+-----------+--------+---------------------+------------+
| worker_id | first_name | last_name | salary | joining_date        | department |
+-----------+------------+-----------+--------+---------------------+------------+
|         4 | Amitabh    | Singh     | 500000 | 2014-02-20 09:00:00 | Admin      |
|         5 | Vivek      | Bhati     | 500000 | 2014-06-11 09:00:00 | Admin      |
+-----------+------------+-----------+--------+---------------------+------------+
2 rows in set (0.00 sec)
------------------------------------------------------------------------------------------

## 28: Write an SQL query to show the second-highest salary from a table.

mysql> select max(salary) from worker where salary < (select max(salary) from worker);
+-------------+
| max(salary) |
+-------------+
|      300000 |
+-------------+
1 row in set (0.00 sec)
------------------------------------------------------------------------------------------

## 29: Write an SQL query to fetch intersecting records of two tables.

mysql> select * from worker intersect select * from new_table;
+-----------+------------+-----------+--------+---------------------+------------+
| worker_id | first_name | last_name | salary | joining_date        | department |
+-----------+------------+-----------+--------+---------------------+------------+
|         1 | Monika     | Arora     | 100000 | 2014-02-20 09:00:00 | HR         |
|         3 | Vishal     | Singhal   | 300000 | 2014-02-20 09:00:00 | HR         |
|         5 | Vivek      | Bhati     | 500000 | 2014-06-11 09:00:00 | Admin      |
|         6 | Vipul      | Diwan     | 200000 | 2014-06-11 09:00:00 | Account    |
|         8 | Geetika    | Chauhan   |  90000 | 2014-04-11 09:00:00 | Admin      |
+-----------+------------+-----------+--------+---------------------+------------+
5 rows in set (0.00 sec)
------------------------------------------------------------------------------------------

## 30: Write an SQL query to fetch the first 50% of records from a table.

mysql> select * from worker where worker_id <= (select count(worker_id)/2 from worker);
+-----------+------------+-----------+--------+---------------------+------------+
| worker_id | first_name | last_name | salary | joining_date        | department |
+-----------+------------+-----------+--------+---------------------+------------+
|         1 | Monika     | Arora     | 100000 | 2014-02-20 09:00:00 | HR         |
|         2 | Niharika   | Verma     |  80000 | 2014-06-11 09:00:00 | Admin      |
|         3 | Vishal     | Singhal   | 300000 | 2014-02-20 09:00:00 | HR         |
|         4 | Amitabh    | Singh     | 500000 | 2014-02-20 09:00:00 | Admin      |
+-----------+------------+-----------+--------+---------------------+------------+
4 rows in set (0.01 sec)
------------------------------------------------------------------------------------------

## 31: Write an SQL query to fetch the departments that have less than five people in them.

mysql> select department from worker group by department having count(worker_id)<5;
+------------+
| department |
+------------+
| HR         |
| Admin      |
| Account    |
+------------+
3 rows in set (0.00 sec)
------------------------------------------------------------------------------------------

## 32: Write an SQL query to show all departments along with the number of people in there.

mysql> select department, count(worker_id) as 'Number of Workers' from worker group by department having count(worker_id)<5;
+------------+-------------------+
| department | Number of Workers |
+------------+-------------------+
| HR         |                 2 |
| Admin      |                 4 |
| Account    |                 2 |
+------------+-------------------+
3 rows in set (0.00 sec)
------------------------------------------------------------------------------------------

## 33: Write an SQL query to show the last record from a table.

mysql> select * from worker where worker_id = (select max(worker_id) from worker);
+-----------+------------+-----------+--------+---------------------+------------+
| worker_id | first_name | last_name | salary | joining_date        | department |
+-----------+------------+-----------+--------+---------------------+------------+
|         8 | Geetika    | Chauhan   |  90000 | 2014-04-11 09:00:00 | Admin      |
+-----------+------------+-----------+--------+---------------------+------------+
1 row in set (0.00 sec)
------------------------------------------------------------------------------------------

## 34: Write an SQL query to fetch the first row of a table.

mysql> select * from worker where worker_id = (select min(worker_id) from worker);
+-----------+------------+-----------+--------+---------------------+------------+
| worker_id | first_name | last_name | salary | joining_date        | department |
+-----------+------------+-----------+--------+---------------------+------------+
|         1 | Monika     | Arora     | 100000 | 2014-02-20 09:00:00 | HR         |
+-----------+------------+-----------+--------+---------------------+------------+
1 row in set (0.00 sec)
------------------------------------------------------------------------------------------

## 35: Write an SQL query to fetch the last five records from a table.

mysql> (select * from worker order by worker_id desc limit 5)order by worker_id asc;
+-----------+------------+-----------+--------+---------------------+------------+
| worker_id | first_name | last_name | salary | joining_date        | department |
+-----------+------------+-----------+--------+---------------------+------------+
|         4 | Amitabh    | Singh     | 500000 | 2014-02-20 09:00:00 | Admin      |
|         5 | Vivek      | Bhati     | 500000 | 2014-06-11 09:00:00 | Admin      |
|         6 | Vipul      | Diwan     | 200000 | 2014-06-11 09:00:00 | Account    |
|         7 | Satish     | Kumar     |  75000 | 2014-01-20 09:00:00 | Account    |
|         8 | Geetika    | Chauhan   |  90000 | 2014-04-11 09:00:00 | Admin      |
+-----------+------------+-----------+--------+---------------------+------------+
5 rows in set (0.00 sec)
------------------------------------------------------------------------------------------

## 36: Write an SQL query to print the name of employees having the highest salary in each department.

mysql> select department, max(salary) from worker group by department;
+------------+-------------+
| department | max(salary) |
+------------+-------------+
| HR         |      300000 |
| Admin      |      500000 |
| Account    |      200000 |
+------------+-------------+
3 rows in set (0.00 sec)
------------------------------------------------------------------------------------------

## 37: Write an SQL query to fetch three max salaries from a table.

mysql> select distinct salary from worker order by salary desc limit 0,3;
+---------+
| salary  |
+---------+
|  500000 |
|  500000 |
|  300000 |
+---------+
3 rows in set (0.00 sec)
------------------------------------------------------------------------------------------

## 38: Write an SQL query to fetch departments along with the total salaries paid for each of them.

mysql> select department, sum(salary) from worker group by department;
+------------+-------------+
| department | sum(salary) |
+------------+-------------+
| HR         |      400000 |
| Admin      |     1170000 |
| Account    |      275000 |
+------------+-------------+
3 rows in set (0.00 sec)
------------------------------------------------------------------------------------------

## 39: Write an SQL query to fetch the names of workers who earn the highest salary.

mysql> select first_name, salary from worker where salary=(select max(salary) from worker);
+------------+--------+
| first_name | salary |
+------------+--------+
| Amitabh    | 500000 |
| Vivek      | 500000 |
+------------+--------+
2 rows in set (0.00 sec)
-------------------------------------------------------------------------------------------------------------------------------
-------------------------------------------------------------------------------------------------------------------------------

